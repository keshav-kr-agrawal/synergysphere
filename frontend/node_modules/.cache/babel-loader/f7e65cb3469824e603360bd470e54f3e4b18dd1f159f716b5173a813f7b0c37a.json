{"ast":null,"code":"var _jsxFileName = \"/Users/keshav/synergysphere1.0/frontend/src/context/SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const SocketProvider = ({\n  children\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const {\n    isAuthenticated,\n    user\n  } = useAuth();\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n        auth: {\n          userId: user.id\n        }\n      });\n      newSocket.on('connect', () => {\n        setConnected(true);\n        console.log('Socket connected');\n      });\n      newSocket.on('disconnect', () => {\n        setConnected(false);\n        console.log('Socket disconnected');\n      });\n      setSocket(newSocket);\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [isAuthenticated, user]);\n  const joinProject = projectId => {\n    if (socket) {\n      socket.emit('join-project', projectId);\n    }\n  };\n  const leaveProject = projectId => {\n    if (socket) {\n      socket.emit('leave-project', projectId);\n    }\n  };\n  const sendMessage = (projectId, message) => {\n    if (socket) {\n      socket.emit('send-message', {\n        projectId,\n        message,\n        user: user,\n        timestamp: new Date()\n      });\n    }\n  };\n  const sendNotification = (userId, notification) => {\n    if (socket) {\n      socket.emit('send-notification', {\n        userId,\n        notification\n      });\n    }\n  };\n  const value = {\n    socket,\n    connected,\n    joinProject,\n    leaveProject,\n    sendMessage,\n    sendNotification\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(SocketProvider, \"LXlrjHqQuoNapz0LXjUyFcoDhA0=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nexport const useSocket = () => {\n  _s2();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s2(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsxDEV","_jsxDEV","SocketContext","SocketProvider","children","_s","socket","setSocket","connected","setConnected","isAuthenticated","user","newSocket","process","env","REACT_APP_SOCKET_URL","auth","userId","id","on","console","log","close","joinProject","projectId","emit","leaveProject","sendMessage","message","timestamp","Date","sendNotification","notification","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSocket","_s2","context","Error","$RefreshReg$"],"sources":["/Users/keshav/synergysphere1.0/frontend/src/context/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\n\nconst SocketContext = createContext();\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const { isAuthenticated, user } = useAuth();\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n        auth: {\n          userId: user.id,\n        },\n      });\n\n      newSocket.on('connect', () => {\n        setConnected(true);\n        console.log('Socket connected');\n      });\n\n      newSocket.on('disconnect', () => {\n        setConnected(false);\n        console.log('Socket disconnected');\n      });\n\n      setSocket(newSocket);\n\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [isAuthenticated, user]);\n\n  const joinProject = (projectId) => {\n    if (socket) {\n      socket.emit('join-project', projectId);\n    }\n  };\n\n  const leaveProject = (projectId) => {\n    if (socket) {\n      socket.emit('leave-project', projectId);\n    }\n  };\n\n  const sendMessage = (projectId, message) => {\n    if (socket) {\n      socket.emit('send-message', {\n        projectId,\n        message,\n        user: user,\n        timestamp: new Date(),\n      });\n    }\n  };\n\n  const sendNotification = (userId, notification) => {\n    if (socket) {\n      socket.emit('send-notification', {\n        userId,\n        notification,\n      });\n    }\n  };\n\n  const value = {\n    socket,\n    connected,\n    joinProject,\n    leaveProject,\n    sendMessage,\n    sendNotification,\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}