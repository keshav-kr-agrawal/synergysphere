{"ast":null,"code":"var _jsxFileName = \"/Users/keshav/synergysphere1.0/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false\n      };\n    case 'LOGIN_FAIL':\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case 'AUTH_ERROR':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set auth token in axios headers\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    if (state.token) {\n      loadUser();\n    } else {\n      dispatch({\n        type: 'AUTH_ERROR'\n      });\n    }\n  }, []);\n  const loadUser = async () => {\n    try {\n      const res = await axios.get('/api/auth/me');\n      dispatch({\n        type: 'USER_LOADED',\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'AUTH_ERROR'\n      });\n      localStorage.removeItem('token');\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data\n      });\n      localStorage.setItem('token', res.data.token);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      toast.error(message);\n      dispatch({\n        type: 'LOGIN_FAIL'\n      });\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const res = await axios.post('/api/auth/register', {\n        name,\n        email,\n        password\n      });\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data\n      });\n      localStorage.setItem('token', res.data.token);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      toast.error(message);\n      dispatch({\n        type: 'LOGIN_FAIL'\n      });\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    localStorage.removeItem('token');\n    toast.success('Logged out successfully');\n  };\n  const updateUser = async userData => {\n    try {\n      const res = await axios.put('/api/auth/profile', userData);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: res.data\n      });\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Update failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    loadUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","user","payload","token","isAuthenticated","loading","initialState","localStorage","getItem","AuthProvider","children","_s","dispatch","defaults","headers","common","loadUser","res","get","data","error","removeItem","login","email","password","post","setItem","success","_error$response","_error$response$data","message","response","register","name","_error$response2","_error$response2$data","logout","updateUser","userData","put","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/keshav/synergysphere1.0/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case 'LOGIN_FAIL':\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case 'AUTH_ERROR':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload },\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set auth token in axios headers\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    if (state.token) {\n      loadUser();\n    } else {\n      dispatch({ type: 'AUTH_ERROR' });\n    }\n  }, []);\n\n  const loadUser = async () => {\n    try {\n      const res = await axios.get('/api/auth/me');\n      dispatch({\n        type: 'USER_LOADED',\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({ type: 'AUTH_ERROR' });\n      localStorage.removeItem('token');\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post('/api/auth/login', { email, password });\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data,\n      });\n      localStorage.setItem('token', res.data.token);\n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      toast.error(message);\n      dispatch({ type: 'LOGIN_FAIL' });\n      return { success: false, message };\n    }\n  };\n\n  const register = async (name, email, password) => {\n    try {\n      const res = await axios.post('/api/auth/register', { name, email, password });\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data,\n      });\n      localStorage.setItem('token', res.data.token);\n      toast.success('Registration successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      toast.error(message);\n      dispatch({ type: 'LOGIN_FAIL' });\n      return { success: false, message };\n    }\n  };\n\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' });\n    localStorage.removeItem('token');\n    toast.success('Logged out successfully');\n  };\n\n  const updateUser = async (userData) => {\n    try {\n      const res = await axios.put('/api/auth/profile', userData);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: res.data,\n      });\n      toast.success('Profile updated successfully');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Update failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    loadUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}